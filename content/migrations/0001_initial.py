# Generated by Django 4.2 on 2025-05-22 22:29

import content.mixins
import content.models.employees
import content.models.news
import content.models.targeted_fundraisings
import content.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUsVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('url', models.URLField(verbose_name='Ссылка на видео')),
            ],
            options={
                'verbose_name': 'Видео о нас',
                'verbose_name_plural': 'Видео о нас',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Направление деятельности',
                'verbose_name_plural': 'Направления деятельности',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('image', models.ImageField(upload_to='team', verbose_name='Фото')),
                ('main_specialities', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Специальности на общей странице')),
                ('order', models.PositiveSmallIntegerField(default=1, verbose_name='Позиция на общей странице')),
                ('interviews', models.URLField(blank=True, verbose_name='Интервью')),
                ('specialists_register', models.URLField(blank=True, verbose_name='Реестр специалистов')),
                ('category_on_main', models.BooleanField(default=True, verbose_name='Отображать категории документов на главной странице')),
                ('specialities', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Специальности')),
                ('education', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Образование')),
                ('additional_education', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Дополнительное образование')),
                ('trainings', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Пройденные тренинги')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Gratitude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('file', models.FileField(upload_to='gratitudes/', verbose_name='Файл благодарности')),
                ('is_active', models.BooleanField(default=True, verbose_name='Видимость в ленте')),
            ],
            options={
                'verbose_name': 'Благодарность',
                'verbose_name_plural': 'Благодарности',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('organization_mission', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Миссия организации')),
                ('ambitions', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Амбиции')),
                ('goal_for_five_years', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Цель на 5 пять лет')),
                ('tasks', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Задачи')),
            ],
            options={
                'verbose_name': 'Миссия',
                'verbose_name_plural': 'Миссии',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('name', models.CharField(max_length=255, verbose_name='Название партнера')),
                ('logo', models.ImageField(upload_to='partners/logos/', verbose_name='Логотип партнера')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Партнер',
                'verbose_name_plural': 'Партнеры',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProgramsProjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name': 'Программа',
                'verbose_name_plural': 'Программы',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('logo', models.ImageField(upload_to='projects/', verbose_name='Логотип')),
                ('status', models.CharField(choices=[('active', 'Действующий'), ('completed', 'Завершенный')], default='active', max_length=9, verbose_name='Статус сбора')),
                ('project_start', models.DateField(blank=True, default=None, null=True, verbose_name='Дата старта')),
                ('project_end', models.DateField(blank=True, default=None, null=True, verbose_name='Дата окончания')),
                ('project_rassvet', models.BooleanField(default=True, verbose_name='Проект НКО Рассвет')),
                ('project_goal', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Цель проекта')),
                ('project_tasks', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Задачи проекта')),
                ('project_description', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Описание проекта')),
                ('achieved_results', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Достигнутые результаты')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='content.programsprojects', verbose_name='Программа')),
                ('source_financing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='content.partner', verbose_name='Источник софинансирования - Партнёр')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ['order', '-project_start'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('author_name', models.CharField(max_length=100, verbose_name='Автор')),
                ('content', models.TextField(verbose_name='Текст отзыва')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TargetedFundraising',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('short_description', models.TextField(verbose_name='Краткое описание')),
                ('fundraising_link', models.URLField(verbose_name='Ссылка на сбор')),
                ('status', models.CharField(choices=[('active', 'Актуальный сбор'), ('completed', 'Завершенный сбор')], default='active', max_length=9, verbose_name='Статус сбора')),
            ],
            options={
                'verbose_name': 'Адресный сбор',
                'verbose_name_plural': 'Адресные сборы',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TypeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название типа документа')),
            ],
            options={
                'verbose_name': 'Тип документа',
                'verbose_name_plural': 'Типы документов',
            },
        ),
        migrations.CreateModel(
            name='ProjectPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='projects/', verbose_name='Фотография')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo', to='content.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Фотография проекта',
                'verbose_name_plural': 'Фотографии проектов',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('photo', models.ImageField(upload_to='news_photos/', verbose_name='Фото')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата новости')),
                ('course_start', models.DateField(blank=True, null=True, verbose_name='Старт курса')),
                ('summary', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Краткий текст')),
                ('detail_page_type', models.CharField(choices=[('create', 'Создать подробную страницу'), ('link', 'Прикрепить ссылку'), ('none', 'Не создавать страницу')], default='none', max_length=10, verbose_name='Подробная страница')),
                ('detail_page_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на подробную страницу')),
                ('show_on_main', models.BooleanField(default=True, verbose_name='Отображение на главной странице')),
                ('full_text', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Основной текст')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='Ссылка на видео')),
                ('directions', models.ManyToManyField(to='content.direction', verbose_name='Направление деятельности')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-date'],
            },
            bases=(content.mixins.CleanEmptyHTMLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='Чем меньше значение, тем первее в списке', verbose_name='Порядок отображения')),
                ('image', models.ImageField(upload_to=content.models.news.upload_file, verbose_name='Фото')),
                ('name', models.CharField(default=None, max_length=100, verbose_name='Название')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='content.news', verbose_name='Новость')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FundraisingTextBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', django_ckeditor_5.fields.CKEditor5Field(validators=[content.validators.validate_not_empty_html], verbose_name='Текстовый блок')),
                ('position', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Позиция блока (1-3)')),
                ('fundraising', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_blocks', to='content.targetedfundraising', verbose_name='Адресный сбор')),
            ],
            options={
                'verbose_name': 'Текстовый блок',
                'verbose_name_plural': 'Текстовые блоки',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='FundraisingPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('image', models.ImageField(upload_to=content.models.targeted_fundraisings.upload_file, verbose_name='Фотография')),
                ('position', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)], verbose_name='Позиция фотографии (1-3)')),
                ('fundraising', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='content.targetedfundraising', verbose_name='Адресный сбор')),
            ],
            options={
                'verbose_name': 'Фотография сбора',
                'verbose_name_plural': 'Фотографии сборов',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название документа')),
                ('file', models.FileField(upload_to=content.models.employees.upload_file, verbose_name='Файл документа')),
                ('on_main_page', models.BooleanField(default=False, verbose_name='Отображать в ленте')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='content.employee', verbose_name='Сотрудник')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='documents', to='content.typedocument', verbose_name='Тип документа')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.AddConstraint(
            model_name='project',
            constraint=models.CheckConstraint(check=models.Q(('project_end__gt', models.F('project_start'))), name='Дата старта не может быть позже даты окончания проекта'),
        ),
        migrations.AddConstraint(
            model_name='fundraisingtextblock',
            constraint=models.UniqueConstraint(fields=('fundraising', 'position'), name='unique_text_position'),
        ),
        migrations.AddConstraint(
            model_name='fundraisingphoto',
            constraint=models.UniqueConstraint(fields=('fundraising', 'position'), name='unique_photo_position'),
        ),
    ]
